{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar allRows = document.querySelector(\"tbody\").querySelectorAll(\"tr\");\nvar tableHeader = document.querySelector(\"thead\");\nvar people = [];\nvar sortOrder = \"\";\nvar isReverse = \"\";\nvar _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined, _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\ntry {\n    for(var _iterator = tableHeader.children[Symbol.iterator](), _step; !(_iteratorNormalCompletion1 = (_step = _iterator.next()).done); _iteratorNormalCompletion1 = true){\n        var head = _step.value;\n        try {\n            var _loop = function() {\n                var info = _step1.value;\n                info.addEventListener(\"click\", function() {\n                    if (sortOrder !== info.textContent) {\n                        sortOrder = info.textContent;\n                        isReverse = 1;\n                    } else isReverse = isReverse * -1;\n                    sort(sortOrder);\n                });\n            };\n            for(var _iterator1 = head.children[Symbol.iterator](), _step1; !(_iteratorNormalCompletion = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion = true)_loop();\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator1.return != null) {\n                    _iterator1.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n    }\n} catch (err) {\n    _didIteratorError1 = true;\n    _iteratorError1 = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion1 && _iterator.return != null) {\n            _iterator.return();\n        }\n    } finally{\n        if (_didIteratorError1) {\n            throw _iteratorError1;\n        }\n    }\n}\nvar _iteratorNormalCompletion2 = true, _didIteratorError2 = false, _iteratorError2 = undefined;\ntry {\n    var _loop1 = function() {\n        var row = _step2.value;\n        row.addEventListener(\"click\", function() {\n            var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n            try {\n                for(var _iterator = allRows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                    var rowReset = _step.value;\n                    rowReset.classList.remove(\"active\");\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return != null) {\n                        _iterator.return();\n                    }\n                } finally{\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n            row.classList.add(\"active\");\n        });\n    };\n    for(var _iterator2 = allRows[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true)_loop1();\n} catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n        }\n    } finally{\n        if (_didIteratorError2) {\n            throw _iteratorError2;\n        }\n    }\n}\nfunction getPeople() {\n    people = [];\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = allRows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var row = _step.value;\n            people.push({\n                Name: row.children[0].textContent,\n                Position: row.children[1].textContent,\n                Office: row.children[2].textContent,\n                Age: row.children[3].textContent,\n                Salary: row.children[4].textContent,\n                isActive: row.classList.contains(\"active\")\n            });\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n}\nfunction sort(sortBy) {\n    getPeople();\n    people = people.sort(function(a, b) {\n        switch(sortBy){\n            case \"Name\":\n                return a.Name.localeCompare(b.Name) * isReverse;\n            case \"Position\":\n                return a.Position.localeCompare(b.Position) * isReverse;\n            case \"Office\":\n                return a.Office.localeCompare(b.Office) * isReverse;\n            case \"Age\":\n                return (+a.Age - +b.Age) * isReverse;\n            case \"Salary\":\n                return (a.Salary.slice(1).split(\",\").join(\"\") - b.Salary.slice(1).split(\",\").join(\"\")) * isReverse;\n        }\n    });\n    for(var i = 0; i < allRows.length; i++)document.querySelector(\"table\").deleteRow(1);\n    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n    try {\n        for(var _iterator = people[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n            var person = _step.value;\n            var newRow = document.createElement(\"tr\");\n            var newCell = void 0;\n            var _iteratorNormalCompletion1 = true, _didIteratorError1 = false, _iteratorError1 = undefined;\n            try {\n                for(var _iterator1 = Object.keys(person)[Symbol.iterator](), _step1; !(_iteratorNormalCompletion1 = (_step1 = _iterator1.next()).done); _iteratorNormalCompletion1 = true){\n                    var key = _step1.value;\n                    if (key === \"isActive\") continue;\n                    newCell = document.createElement(\"td\");\n                    newCell.textContent = person[key];\n                    newRow.appendChild(newCell);\n                }\n            } catch (err) {\n                _didIteratorError1 = true;\n                _iteratorError1 = err;\n            } finally{\n                try {\n                    if (!_iteratorNormalCompletion1 && _iterator1.return != null) {\n                        _iterator1.return();\n                    }\n                } finally{\n                    if (_didIteratorError1) {\n                        throw _iteratorError1;\n                    }\n                }\n            }\n            if (person.isActive) newRow.classList.add(\"active\");\n            document.querySelector(\"tbody\").appendChild(newRow);\n        }\n    } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n            }\n        } finally{\n            if (_didIteratorError) {\n                throw _iteratorError;\n            }\n        }\n    }\n    allRows = document.querySelector(\"tbody\").querySelectorAll(\"tr\");\n    var _iteratorNormalCompletion2 = true, _didIteratorError2 = false, _iteratorError2 = undefined;\n    try {\n        var _loop = function() {\n            var row = _step2.value;\n            row.addEventListener(\"click\", function() {\n                var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                try {\n                    for(var _iterator = allRows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                        var rowReset = _step.value;\n                        rowReset.classList.remove(\"active\");\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally{\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return != null) {\n                            _iterator.return();\n                        }\n                    } finally{\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n                row.classList.add(\"active\");\n            });\n        };\n        for(var _iterator2 = allRows[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true)_loop();\n    } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n    } finally{\n        try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n            }\n        } finally{\n            if (_didIteratorError2) {\n                throw _iteratorError2;\n            }\n        }\n    }\n}\nvar newForm = document.createElement(\"form\");\nnewForm.classList.add(\"new-employee-form\");\nfor(var _i = 0, _iter = [\n    \"Name:\",\n    \"Position:\",\n    \"Office:\",\n    \"Age:\",\n    \"Salary:\"\n]; _i < _iter.length; _i++){\n    var field = _iter[_i];\n    var newLabel = document.createElement(\"label\");\n    var newInput = void 0;\n    if (field !== \"Office:\") {\n        newInput = document.createElement(\"input\");\n        newInput.setAttribute(\"data-qa\", field.toLowerCase().slice(0, -1));\n        newInput.setAttribute(\"name\", field.toLowerCase().slice(0, -1));\n        newInput.setAttribute(\"type\", \"text\");\n    } else {\n        newInput = document.createElement(\"select\");\n        newInput.setAttribute(\"data-qa\", field.toLowerCase().slice(0, -1));\n        newInput.setAttribute(\"name\", field.toLowerCase().slice(0, -1));\n        for(var _i1 = 0, _iter1 = [\n            \"Tokyo\",\n            \"Singapore\",\n            \"London\",\n            \"New York\",\n            \"Edinbutgh\",\n            \"San Francisco\"\n        ]; _i1 < _iter1.length; _i1++){\n            var office = _iter1[_i1];\n            var newOption = document.createElement(\"option\");\n            newOption.setAttribute(\"value\", office);\n            newOption.textContent = office;\n            newInput.appendChild(newOption);\n        }\n    }\n    if (field === \"Salary:\") {\n        newInput.removeAttribute(\"type\");\n        newInput.setAttribute(\"type\", \"number\");\n        newInput.setAttribute(\"step\", 1000);\n    }\n    newInput.setAttribute(\"required\", \"\");\n    newLabel.textContent = field;\n    newLabel.appendChild(newInput);\n    newForm.appendChild(newLabel);\n}\nvar newButton = document.createElement(\"button\");\nnewButton.setAttribute(\"type\", \"button\");\nnewButton.textContent = \"Save to table\";\nnewForm.appendChild(newButton);\ndocument.querySelector(\"body\").appendChild(newForm);\nnewButton.addEventListener(\"click\", function(e) {\n    e.preventDefault();\n    var form = document.forms[0];\n    var nameCell = document.createElement(\"td\");\n    var positionCell = document.createElement(\"td\");\n    var officeCell = document.createElement(\"td\");\n    var ageCell = document.createElement(\"td\");\n    var salaryCell = document.createElement(\"td\");\n    if (form.name.value.length < 4) pushNotification(10, 10, \"Error!\", \"Name must be at least 4 letters long!\", \"error\");\n    else if (form.position.value === \"\") pushNotification(10, 10, \"Error!\", \"Position can't be empty!\", \"error\");\n    else if (form.age.value < 18 || form.age.value > 90 || isNaN(parseInt(form.age.value))) pushNotification(10, 10, \"Error!\", \"Age must be between 18 and 90!\", \"error\");\n    else {\n        var newRow = document.createElement(\"tr\");\n        salaryCell.textContent = \"$\";\n        nameCell.textContent = form.name.value;\n        positionCell.textContent = form.position.value;\n        officeCell.textContent = form.office.value;\n        ageCell.textContent = +form.age.value;\n        salaryCell.textContent += (+form.salary.value).toLocaleString(\"En-US\");\n        newRow.appendChild(nameCell);\n        newRow.appendChild(positionCell);\n        newRow.appendChild(officeCell);\n        newRow.appendChild(ageCell);\n        newRow.appendChild(salaryCell);\n        document.querySelector(\"tbody\").appendChild(newRow);\n        allRows = document.querySelector(\"tbody\").querySelectorAll(\"tr\");\n        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n        try {\n            var _loop = function() {\n                var row = _step.value;\n                row.addEventListener(\"click\", function() {\n                    var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\n                    try {\n                        for(var _iterator = allRows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n                            var rowReset = _step.value;\n                            rowReset.classList.remove(\"active\");\n                        }\n                    } catch (err) {\n                        _didIteratorError = true;\n                        _iteratorError = err;\n                    } finally{\n                        try {\n                            if (!_iteratorNormalCompletion && _iterator.return != null) {\n                                _iterator.return();\n                            }\n                        } finally{\n                            if (_didIteratorError) {\n                                throw _iteratorError;\n                            }\n                        }\n                    }\n                    row.classList.add(\"active\");\n                });\n            };\n            for(var _iterator = allRows[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true)_loop();\n        } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n        } finally{\n            try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                    _iterator.return();\n                }\n            } finally{\n                if (_didIteratorError) {\n                    throw _iteratorError;\n                }\n            }\n        }\n        getPeople();\n        pushNotification(10, 10, \"Succesfully added new row!\", \"New info added at the bottom of table.\", \"success\");\n    }\n});\nvar pushNotification = function(posTop, posRight, title, description, type) {\n    var message = document.createElement(\"div\");\n    message.setAttribute(\"data-qa\", \"notification\");\n    var header = document.createElement(\"h2\");\n    header.innerText = title;\n    header.classList.add(\"title\");\n    var messageBody = document.createElement(\"p\");\n    messageBody.innerText = description;\n    message.appendChild(header);\n    message.appendChild(messageBody);\n    message.classList.add(\"notification\", type);\n    message.style.top = \"\".concat(posTop, \"px\");\n    message.style.right = \"\".concat(posRight, \"px\");\n    document.body.appendChild(message);\n    setTimeout(function() {\n        message.remove();\n    }, \"2000\");\n};\n\n//# sourceMappingURL=index.01173b34.js.map\n","'use strict';\n\nlet allRows = document.querySelector('tbody').querySelectorAll('tr');\nconst tableHeader = document.querySelector('thead');\nlet people = [];\nlet sortOrder = '';\nlet isReverse = '';\n\nfor (const head of tableHeader.children) {\n  for (const info of head.children) {\n    info.addEventListener('click', () => {\n      if (sortOrder !== info.textContent) {\n        sortOrder = info.textContent;\n        isReverse = 1;\n      } else {\n        isReverse = isReverse * -1;\n      }\n      sort(sortOrder);\n    });\n  }\n}\n\nfor (const row of allRows) {\n  row.addEventListener('click', () => {\n    for (const rowReset of allRows) {\n      rowReset.classList.remove('active');\n    }\n    row.classList.add('active');\n  });\n}\n\nfunction getPeople() {\n  people = [];\n\n  for (const row of allRows) {\n    people.push({\n      Name: row.children[0].textContent,\n      Position: row.children[1].textContent,\n      Office: row.children[2].textContent,\n      Age: row.children[3].textContent,\n      Salary: row.children[4].textContent,\n      isActive: row.classList.contains('active'),\n    });\n  }\n}\n\nfunction sort(sortBy) {\n  getPeople();\n\n  people = people.sort((a, b) => {\n    switch (sortBy) {\n      case 'Name':\n        return a.Name.localeCompare(b.Name) * isReverse;\n\n      case 'Position':\n        return a.Position.localeCompare(b.Position) * isReverse;\n\n      case 'Office':\n        return a.Office.localeCompare(b.Office) * isReverse;\n\n      case 'Age':\n        return (+a.Age - +b.Age) * isReverse;\n\n      case 'Salary':\n        return (\n          (a.Salary.slice(1).split(',').join('') -\n            b.Salary.slice(1).split(',').join('')) *\n          isReverse\n        );\n    }\n  });\n\n  for (let i = 0; i < allRows.length; i++) {\n    document.querySelector('table').deleteRow(1);\n  }\n\n  for (const person of people) {\n    const newRow = document.createElement('tr');\n\n    let newCell;\n\n    for (const key of Object.keys(person)) {\n      if (key === 'isActive') {\n        continue;\n      }\n      newCell = document.createElement('td');\n      newCell.textContent = person[key];\n      newRow.appendChild(newCell);\n    }\n\n    if (person.isActive) {\n      newRow.classList.add('active');\n    }\n\n    document.querySelector('tbody').appendChild(newRow);\n  }\n\n  allRows = document.querySelector('tbody').querySelectorAll('tr');\n\n  for (const row of allRows) {\n    row.addEventListener('click', () => {\n      for (const rowReset of allRows) {\n        rowReset.classList.remove('active');\n      }\n      row.classList.add('active');\n    });\n  }\n}\n\nconst newForm = document.createElement('form');\n\nnewForm.classList.add('new-employee-form');\n\nfor (const field of ['Name:', 'Position:', 'Office:', 'Age:', 'Salary:']) {\n  const newLabel = document.createElement('label');\n  let newInput;\n\n  if (field !== 'Office:') {\n    newInput = document.createElement('input');\n\n    newInput.setAttribute('data-qa', field.toLowerCase().slice(0, -1));\n    newInput.setAttribute('name', field.toLowerCase().slice(0, -1));\n    newInput.setAttribute('type', 'text');\n  } else {\n    newInput = document.createElement('select');\n    newInput.setAttribute('data-qa', field.toLowerCase().slice(0, -1));\n    newInput.setAttribute('name', field.toLowerCase().slice(0, -1));\n\n    for (const office of [\n      'Tokyo',\n      'Singapore',\n      'London',\n      'New York',\n      'Edinbutgh',\n      'San Francisco',\n    ]) {\n      const newOption = document.createElement('option');\n\n      newOption.setAttribute('value', office);\n      newOption.textContent = office;\n      newInput.appendChild(newOption);\n    }\n  }\n\n  if (field === 'Salary:') {\n    newInput.removeAttribute('type');\n    newInput.setAttribute('type', 'number');\n    newInput.setAttribute('step', 1000);\n  }\n  newInput.setAttribute('required', '');\n  newLabel.textContent = field;\n  newLabel.appendChild(newInput);\n  newForm.appendChild(newLabel);\n}\n\nconst newButton = document.createElement('button');\n\nnewButton.setAttribute('type', 'button');\n\nnewButton.textContent = 'Save to table';\n\nnewForm.appendChild(newButton);\ndocument.querySelector('body').appendChild(newForm);\n\nnewButton.addEventListener('click', (e) => {\n  e.preventDefault();\n\n  const form = document.forms[0];\n  const nameCell = document.createElement('td');\n  const positionCell = document.createElement('td');\n  const officeCell = document.createElement('td');\n  const ageCell = document.createElement('td');\n  const salaryCell = document.createElement('td');\n\n  if (form.name.value.length < 4) {\n    pushNotification(\n      10,\n      10,\n      'Error!',\n      'Name must be at least 4 letters long!',\n      'error',\n    );\n  } else if (form.position.value === '') {\n    pushNotification(10, 10, 'Error!', `Position can't be empty!`, 'error');\n  } else if (\n    form.age.value < 18 ||\n    form.age.value > 90 ||\n    isNaN(parseInt(form.age.value))\n  ) {\n    pushNotification(\n      10,\n      10,\n      'Error!',\n      'Age must be between 18 and 90!',\n      'error',\n    );\n  } else {\n    const newRow = document.createElement('tr');\n\n    salaryCell.textContent = '$';\n    nameCell.textContent = form.name.value;\n    positionCell.textContent = form.position.value;\n    officeCell.textContent = form.office.value;\n    ageCell.textContent = +form.age.value;\n    salaryCell.textContent += (+form.salary.value).toLocaleString('En-US');\n\n    newRow.appendChild(nameCell);\n    newRow.appendChild(positionCell);\n    newRow.appendChild(officeCell);\n    newRow.appendChild(ageCell);\n    newRow.appendChild(salaryCell);\n\n    document.querySelector('tbody').appendChild(newRow);\n\n    allRows = document.querySelector('tbody').querySelectorAll('tr');\n\n    for (const row of allRows) {\n      row.addEventListener('click', () => {\n        for (const rowReset of allRows) {\n          rowReset.classList.remove('active');\n        }\n        row.classList.add('active');\n      });\n    }\n    getPeople();\n\n    pushNotification(\n      10,\n      10,\n      'Succesfully added new row!',\n      'New info added at the bottom of table.',\n      'success',\n    );\n  }\n});\n\nconst pushNotification = (posTop, posRight, title, description, type) => {\n  const message = document.createElement('div');\n\n  message.setAttribute('data-qa', 'notification');\n\n  const header = document.createElement('h2');\n\n  header.innerText = title;\n  header.classList.add('title');\n\n  const messageBody = document.createElement('p');\n\n  messageBody.innerText = description;\n\n  message.appendChild(header);\n  message.appendChild(messageBody);\n  message.classList.add('notification', type);\n  message.style.top = `${posTop}px`;\n  message.style.right = `${posRight}px`;\n  document.body.appendChild(message);\n\n  setTimeout(() => {\n    message.remove();\n  }, '2000');\n};\n"],"names":["allRows","document","querySelector","querySelectorAll","tableHeader","people","sortOrder","isReverse","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step","_iterator","children","Symbol","iterator","next","done","head","value","_step1","_iterator1","_loop","info","addEventListener","textContent","sort","sortBy","getPeople","a","b","Name","localeCompare","Position","Office","Age","Salary","slice","split","join","i","length","deleteRow","person","newRow","createElement","newCell","Object","keys","key","appendChild","err","return","isActive","classList","add","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","row","rowReset","remove","_loop1","push","contains","newForm","_i","_iter","field","newLabel","newInput","setAttribute","toLowerCase","_i1","_iter1","office","newOption","removeAttribute","newButton","e","preventDefault","form","forms","nameCell","positionCell","officeCell","ageCell","salaryCell","name","pushNotification","position","age","isNaN","parseInt","salary","toLocaleString","posTop","posRight","title","description","type","message","header","innerText","messageBody","style","top","concat","right","body","setTimeout"],"version":3,"file":"index.01173b34.js.map"}